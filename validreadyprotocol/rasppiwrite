import RPi.GPIO as GPIO
import time

# Pin definitions
clk = 17       # Clock signal input (from Arduino)
RValid = 27    # Valid signal output (to Arduino)
RReady = 22    # Ready signal input (from Arduino)
RData = 10   # Data signal output (to Arduino)

def setup_gpio():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(clk, GPIO.IN)
    GPIO.setup(RValid, GPIO.OUT)
    GPIO.setup(RReady, GPIO.IN)
    GPIO.setup(RData, GPIO.OUT)
    GPIO.output(RValid, GPIO.LOW)

def write_to_arduino(number):
    setup_gpio()
    GPIO.output(RValid, GPIO.HIGH)  # Indicate data is valid
    writing = False

    data = [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0]  # Example data
    data = [(number >> i)&1 for i in range(14)]
    i = 0
    last_clk_state = GPIO.input(clk)
    GPIO.output(RData, data[i])

    while True:
        current_clk = GPIO.input(clk)
        ready_state = GPIO.input(RReady)

        # Detect rising edge
        if last_clk_state == GPIO.LOW and current_clk == GPIO.HIGH:
            if ready_state == GPIO.HIGH:
                # Begin transfer
                writing = True
                GPIO.output(RValid, GPIO.LOW)
                print("VALID CLEARED")
            if writing:
                # Transfer data
                i += 1
                if i >= 14:
                    break
                GPIO.output(RData, data[i])

        last_clk_state = current_clk

# Example usage
if __name__ == "__main__":
    i = 0
    while True:

        write_to_arduino(i)
        i += 1
